<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        CQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGf8AcgABAQEtAiwBQwEtAiwBRAEtAiwBRAEtAiwBQwMAAQE7AAEBAy0BQwMt
        AUQDLQFEAy0BQwMAAQHYAAMYASEB4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wMYASE4AAMY
        ASEQ/wMYASHYAAEqAikBPgHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/ASoCKQE+OAADKgE+
        EP8DKgE+yAABNwE2ATUBVgFvAVgBTwGqASUCJAE2AxcBIAF6AVwBUQG2AeEBZwE/Af8B4QFnAT8B/wHh
        AWcBPwH/AeEBZwE/Af8BegFbAVABtQMXASABJQIkATYBbwFYAU8BqgE/AT0BOwFlGAADOAFWA3YBqgMl
        ATYDFwEgA4IBthD/A4EBtQMXASADJQE2A3YBqgNAAWW0AAMKAQ0BtgFnAUsB5gHhAWcBPwH/AeEBZwE/
        Af8B2AFkAUEB+wHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHY
        AWQBQQH7AeEBZwE/Af8B4QFnAT8B/wHCAWYBRwHuAw8BFBAAAwoBDQPLAeYI/wP0AfsY/wP0AfsI/wPY
        Ae4DDwEUsAABVgFMAUkBiQHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8B1wFn
        AUMB+gGTAWABUAHNAZMBYAFQAc0B1wFnAUMB+gHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/
        AeEBZwE/Af8BXgFQAUwBlBAAA1kBiRT/A/IB+gOgAc0DoAHNA/IB+hT/A2IBlKwAAwQBBgHMAWYBRAH0
        AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8BjgFgAVIByAMYASIIAAMZASMBkAFiAVAByQHh
        AWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AccBZgFGAfEDAQECCAADBAEGA+YB9BD/A5oByAMY
        ASIIAAMZASMDmgHJEP8D4AHxAwEBAqwAAyYBOAGqAWQBTgHeAeEBZwE/Af8B4QFnAT8B/wHOAWQBRQH2
        AxYBHhAAAxYBHwHSAWkBRQH3AeEBZwE/Af8B4QFnAT8B/wGlAWQBTwHaASECIAEvEAADJgE4A7oB3gj/
        A+gB9gMWAR4QAAMWAR8D7AH3CP8DtAHaAyEBL7QAAScCJgE5AeEBZwE/Af8B4QFnAT8B/wGIAV8BUQHD
        GAABigFgAVEBxAHhAWcBPwH/AeEBZwE/Af8DJgE4GAADJwE5CP8DkwHDGAADlQHECP8DJgE4uAADJgE4
        AeEBZwE/Af8B4QFnAT8B/wGKAV8BUQHFGAABjAFgAVABxgHhAWcBPwH/AeEBZwE/Af8DJQE3GAADJgE4
        CP8DlQHFGAADlwHGCP8DJQE3tAADIQEwAaUBZAFPAdsB4QFnAT8B/wHhAWcBPwH/Ac4BZAFFAfYDFgEe
        EAADFgEfAdIBaQFFAfcB4QFnAT8B/wHhAWcBPwH/AaoBZAFOAd4DJgE4EAADIQEwA7cB2wj/A+gB9gMW
        AR4QAAMWAR8D7AH3CP8DugHeAyYBOKwAAwYBCAHJAWcBRwHyAeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/
        AeEBZwE/Af8BjAFfAVEBxwMUARsIAAEVAhQBHAGOAWABUgHIAeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/
        AeEBZwE/Af8BzAFmAUQB9AMEAQUIAAMGAQgD4gHyEP8DlwHHAxQBGwgAAxUBHAOaAcgQ/wPmAfQDBAEF
        rAABXwFRAUwBlQHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8BywFmAUcB8wGM
        AV8BUQHHAYwBXwFRAccBzAFmAUQB9AHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/
        Af8BVQFLAUgBiBAAA2IBlRT/A+QB8wOXAccDlwHHA+YB9BT/A1cBiLAAAw8BFAHEAWYBSAHvAeEBZwE/
        Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/AeEBZwE/Af8B4QFnAT8B/wHh
        AWcBPwH/AdgBZAFBAfsB4QFnAT8B/wHhAWcBPwH/AbYBZwFLAeYDCgENEAADDwEUA9oB7yT/A/QB+wj/
        A8sB5gMKAQ20AAFBAT4BPQFoAXQBWgFPAa8CKwEqAUEDHwEsAYYBXQFRAcEB4QFnAT8B/wHhAWcBPwH/
        AeEBZwE/Af8B4QFnAT8B/wF6AVsBUAG1AxcBIAElAiQBNgFzAVkBUAGtATgCNgFXGAADQgFoA3sBrwMr
        AUEDHwEsA48BwRD/A4EBtQMXASADJQE2A3kBrQM4AVfIAAIrASoBQQHhAWcBPwH/AeEBZwE/Af8B4QFn
        AT8B/wHhAWcBPwH/ASsCKgFAOAADKwFBEP8DKwFA2AADGAEiAeEBZwE/Af8B4QFnAT8B/wHhAWcBPwH/
        AeEBZwE/Af8DGAEhOAADGAEiEP8DGAEh2wABAQEzAjIBTwE3AjUBVQE3AjUBVQEzAjIBTwMAAQE7AAEB
        AzMBTwM3AVUDNwFVAzMBTwMAAQH/AP0AAUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcA
        A/8BAAX/BwAB/gEHAf8B4AF/BwAB/gEHAf8B4AF/BwAB/gEHAf8B4AF/BwAB4AEAAX4BAAEHBwABwAEA
        ATwBAAEDBwABwAEAATwBAAEDBwABgAFgARgBBgEBBwABwAHwATwBDwEDBwAB4QH4AX4BHwGHBwAB4QH4
        AX4BHwGHBwABwAHwATwBDwEDBwABgAFgARgBBgEBBwABwAEAATwBAAEDBwABwAEAATwBAAEDBwAB4AEA
        AX4BAAEHBwAB/gEHAf8B4AF/BwAB/gEHAf8B4AF/BwAB/gEHAf8B4AF/BwAF/wcACw==
</value>
  </data>
</root>